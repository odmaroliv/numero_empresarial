@page "/balance/recharge"
@using Microsoft.AspNetCore.Authorization
@using NumeroEmpresarial.Core.Interfaces
@using NumeroEmpresarial.Domain.Entities
@inject IUserService UserService
@inject IStripeService StripeService
@inject ILocalizationService LocalizationService
@inject IAuthenticationService AuthenticationService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow">
                <div class="card-header bg-white">
                    <h5 class="mb-0 text-primary">@LocalizedText("Balance.RechargeTitle")</h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-info d-flex">
                        <div class="me-3">
                            <i class="fas fa-info-circle fa-2x"></i>
                        </div>
                        <div>
                            <p class="mb-0"><strong>@LocalizedText("Balance.CurrentBalance"):</strong> $@_currentBalance.ToString("F2")</p>
                            <p class="mb-0 small text-muted">@LocalizedText("Balance.BalanceDescription")</p>
                        </div>
                    </div>

                    <EditForm Model="@_rechargeModel" OnValidSubmit="ProcessRechargeAsync">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-4 mt-4">
                            <label for="amount" class="form-label">@LocalizedText("Balance.AmountToRecharge")</label>
                            <div class="input-group">
                                <span class="input-group-text">$</span>
                                <input id="amount" class="form-control form-control-lg" type="number" step="0.01" min="5" @bind="_rechargeModel.Amount" placeholder="20.00" />
                            </div>
                            <div class="form-text">@LocalizedText("Balance.MinimumAmount") $5.00</div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">@LocalizedText("Balance.ChooseAmount"):</label>
                            <div class="d-flex justify-content-between flex-wrap">
                                <div class="amount-option mb-2" @onclick="() => SetPredefinedAmount(10)">
                                    <div class="card p-2 text-center @(_rechargeModel.Amount == 10 ? "bg-primary text-white" : "")">
                                        <h4>$10</h4>
                                        <small>@LocalizedText("Balance.Basic")</small>
                                    </div>
                                </div>
                                <div class="amount-option mb-2" @onclick="() => SetPredefinedAmount(20)">
                                    <div class="card p-2 text-center @(_rechargeModel.Amount == 20 ? "bg-primary text-white" : "")">
                                        <h4>$20</h4>
                                        <small>@LocalizedText("Balance.Standard")</small>
                                    </div>
                                </div>
                                <div class="amount-option mb-2" @onclick="() => SetPredefinedAmount(50)">
                                    <div class="card p-2 text-center @(_rechargeModel.Amount == 50 ? "bg-primary text-white" : "")">
                                        <h4>$50</h4>
                                        <small>@LocalizedText("Balance.Popular")</small>
                                    </div>
                                </div>
                                <div class="amount-option mb-2" @onclick="() => SetPredefinedAmount(100)">
                                    <div class="card p-2 text-center @(_rechargeModel.Amount == 100 ? "bg-primary text-white" : "")">
                                        <h4>$100</h4>
                                        <small>@LocalizedText("Balance.Premium")</small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="alert alert-light border mb-4">
                            <h6 class="mb-3 d-flex align-items-center">
                                <i class="fas fa-lock me-2 text-success"></i>
                                @LocalizedText("Payment.SecurePayment")
                            </h6>
                            <div class="d-flex justify-content-between">
                                <img src="images/visa.png" alt="Visa" height="30" />
                                <img src="images/mastercard.png" alt="Mastercard" height="30" />
                                <img src="images/amex.png" alt="American Express" height="30" />
                                <img src="images/stripe.png" alt="Stripe" height="30" />
                            </div>
                            <p class="small text-muted mt-2 mb-0">
                                @LocalizedText("Payment.SecurePaymentDesc")
                            </p>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg" disabled="@(_isProcessing || _rechargeModel.Amount < 5)">
                                @if (_isProcessing)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span class="ms-2">@LocalizedText("Common.Processing")</span>
                                }
                                else
                                {
                                    <i class="fas fa-credit-card me-2"></i>
                                    <span>@LocalizedText("Payment.ProceedToPayment") ($@_rechargeModel.Amount.ToString("F2"))</span>
                                }
                            </button>
                            <a href="/" class="btn btn-outline-secondary">@LocalizedText("Common.Cancel")</a>
                        </div>
                    </EditForm>
                </div>
                <div class="card-footer bg-white">
                    <div class="small text-muted text-center">
                        <i class="fas fa-shield-alt me-1"></i>
                        @LocalizedText("Payment.ProcessedByStripe")
                    </div>
                </div>
            </div>

            <div class="card mt-4 shadow">
                <div class="card-header bg-white">
                    <h5 class="mb-0 text-primary">@LocalizedText("Balance.RecentTransactions")</h5>
                </div>
                <div class="card-body p-0">
                    @if (_recentTransactions.Any())
                    {
                        <div class="table-responsive">
                            <table class="table mb-0">
                                <thead>
                                    <tr>
                                        <th>@LocalizedText("Transaction.Date")</th>
                                        <th>@LocalizedText("Common.Description")</th>
                                        <th class="text-end">@LocalizedText("Transaction.Amount")</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var transaction in _recentTransactions)
                                    {
                                        <tr>
                                            <td>@transaction.TransactionDate.ToLocalTime().ToString("dd/MM/yyyy HH:mm")</td>
                                            <td>@transaction.Description</td>
                                            <td class="text-end @(transaction.Amount > 0 ? "text-success" : "text-danger")">
                                                @(transaction.Amount > 0 ? "+" : "")$@transaction.Amount.ToString("F2")
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center p-4">
                            <i class="fas fa-receipt fa-2x text-muted mb-3"></i>
                            <p class="text-muted">@LocalizedText("Transaction.NoRecent")</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private class RechargeModel
    {
        public decimal Amount { get; set; } = 20;
    }

    private string _currentLanguage = "es";
    private Guid _currentUserId;
    private decimal _currentBalance = 0;
    private RechargeModel _rechargeModel = new();
    private bool _isProcessing = false;
    private List<Transaction> _recentTransactions = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obtener idioma actual
            _currentLanguage = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "preferredLanguage") ?? "es";

            // Obtener el ID del usuario actual
            _currentUserId = await AuthenticationService.GetCurrentUserIdAsync();

            // Cargar saldo del usuario
            await LoadUserDataAsync();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error: {ex.Message}");
            NavigationManager.NavigateTo("/", true);
        }
    }

    private async Task LoadUserDataAsync()
    {
        try
        {
            var user = await UserService.GetUserByIdAsync(_currentUserId);
            if (user != null)
            {
                _currentBalance = user.Balance;
            }

            // Cargar transacciones recientes
            _recentTransactions = await UserService.GetRecentTransactionsAsync(_currentUserId, 5);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading user data: {ex.Message}");
        }
    }

    private void SetPredefinedAmount(decimal amount)
    {
        _rechargeModel.Amount = amount;
    }

    private async Task ProcessRechargeAsync()
    {
        if (_rechargeModel.Amount < 5)
        {
            await JSRuntime.InvokeVoidAsync("alert", await LocalizedText("Balance.AmountTooSmall"));
            return;
        }

        try
        {
            _isProcessing = true;

            // Crear sesión de pago con Stripe
            string sessionId = await StripeService.CreateCheckoutSessionAsync(
                _currentUserId,
                _rechargeModel.Amount,
                await LocalizedText("Balance.RechargeDescription")
            );

            // Redirigir a la página de pago de Stripe
            NavigationManager.NavigateTo($"/payment/checkout?sessionId={sessionId}");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error: {ex.Message}");
            _isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task<string> LocalizedText(string key)
    {
        try
        {
            return await LocalizationService.GetLocalizedTextAsync(key, _currentLanguage);
        }
        catch
        {
            return key; // Fallback si hay error
        }
    }
}